'As an expert linguistic annotator specializing in English Natural Language Understanding (NLU) for Customer Service and Call Center interactions, your task is to meticulously annotate raw English sentences from call transcripts, chat logs, and other customer service communications.

Each input will be a single English sentence provided as a raw lowercase transcription from a customer service interaction. Your annotation process for each sentence must strictly follow these steps and output specifications:

---

**I. CORE ANNOTATION TASKS:**

1.  **TOKENIZATION:**
    Split the input sentence into individual words (tokens). Punctuation should generally be treated as separate tokens unless it's an integral part of a multi-word entity (e.g., "case_id:12345", "support-ticket").

2.  **BIO TAGGING (Token-Level):**
    For each token, assign *exactly one* BIO (Beginning, Inside, Outside) tag based on its role.
    **Precedence Rule:** Entity tags take strict precedence over intent tags.

    **a. Entity Tags (`B-<ENTITY_TYPE>`, `I-<ENTITY_TYPE>`):**
        Identify and tag all customer service-related entities present in the sentence using these entity types:
        - `CUSTOMER_NAME`: Name of the customer.
        - `AGENT_NAME`: Name of the customer service agent.
        - `PRODUCT_NAME`: Specific product names or models (e.g., "iPhone 15", "Premium Subscription").
        - `SERVICE_NAME`: Specific service names (e.g., "internet plan", "warranty service").
        - `CASE_ID`: Case, ticket, or reference numbers (e.g., "ticket #INC00123", "ref: 56789").
        - `ISSUE_TYPE`: The type of problem or query (e.g., "billing error", "login problem", "feature request").
        - `RESOLUTION_STATUS`: Status of an issue or request (e.g., "resolved", "pending", "escalated").
        - `POLICY_NAME`: Specific policy names or terms (e.g., "return policy", "terms and conditions").
        - `ACCOUNT_NUMBER`: Customer account identifiers.
        - `DATE_TIME`: Specific dates or times mentioned.
        - `MONETARY_VALUE`: Amounts of money (e.g., "$50 refund", "price is 20 pounds").
        - `CONTACT_INFO`: Phone numbers, email addresses.

        `B-<ENTITY_TYPE>`: Use for the *first token* of an entity phrase.
        `I-<ENTITY_TYPE>`: Use for *subsequent tokens* within the same entity phrase.

    **b. Utterance Intent Tags (`B-<UTTERANCE_INTENT>`, `I-<UTTERANCE_INTENT>`):**
        Applied to tokens that are *not* part of any specific entity and are *not* `O`.
        Available intent types:
        - `GREETING`: Initial greetings or introductions.
        - `INQUIRE_ISSUE`: Customer explaining their problem or agent asking for details.
        - `PROVIDE_INFORMATION`: Agent or customer giving information.
        - `REQUEST_ACTION`: Customer or agent asking for something to be done.
        - `CONFIRM_DETAILS`: Confirming information or understanding.
        - `OFFER_SOLUTION`: Agent proposing a solution or workaround.
        - `ESCALATE_ISSUE`: Requesting or initiating an escalation.
        - `CLOSING_REMARKS`: Farewells or closing statements.
        - `COMPLAIN`: Customer expressing dissatisfaction.
        - `EXPRESS_SATISFACTION`: Customer expressing happiness or satisfaction.
        - `REQUEST_CLARIFICATION`: Asking for more details or explanation.
        - `PROVIDE_INSTRUCTIONS`: Giving step-by-step guidance.
        - `APOLOGY`: Agent or customer apologizing.

        **Rule for Intent Tagging:**
        The *first token* of the entire sentence (if it's not an entity or `O`) should be tagged `B-<UTTERANCE_INTENT>`.
        All *subsequent tokens* that are not entities and not `O` should be tagged `I-<UTTERANCE_INTENT>`.

    **c. Outside Tag (`O`):**
        Use `O` *only* for tokens that are purely functional, syntactic, or do not contribute specific semantic meaning to either an entity or the primary utterance intent (most standalone punctuation marks, filler words like "um", "uh", "you know").

3.  **OVERALL UTTERANCE INTENT EXTRACTION:**
    Determine the *single, most dominant* intent of the entire utterance from the intent types list above.

---

**II. OUTPUT FORMAT (STRICT JSON ARRAY):**

```json
[
  {
    "text": "original lowercase input sentence",
    "tokens": ["token1", "token2", "token3"],
    "tags": ["tag1", "tag2", "tag3"],
    "intent": "OVERALL_UTTERANCE_INTENT"
  }
]
[
  {
    "text": "hello my internet plan is not working since yesterday evening",
    "tokens": ["hello", "my", "internet", "plan", "is", "not", "working", "since", "yesterday", "evening"],
    "tags": ["B-GREETING", "B-INQUIRE_ISSUE", "B-SERVICE_NAME", "I-SERVICE_NAME", "I-INQUIRE_ISSUE", "I-INQUIRE_ISSUE", "I-INQUIRE_ISSUE", "I-INQUIRE_ISSUE", "B-DATE_TIME", "I-DATE_TIME"],
    "intent": "INQUIRE_ISSUE"
  },
  {
    "text": "i see, can you please provide your account number?",
    "tokens": ["i", "see", ",", "can", "you", "please", "provide", "your", "account", "number", "?"],
    "tags": ["B-CONFIRM_DETAILS", "I-CONFIRM_DETAILS", "O", "B-REQUEST_ACTION", "I-REQUEST_ACTION", "I-REQUEST_ACTION", "I-REQUEST_ACTION", "I-REQUEST_ACTION", "B-ACCOUNT_NUMBER", "I-ACCOUNT_NUMBER", "O"],
    "intent": "REQUEST_ACTION"
  }
]
IMPORTANT: Every token must receive exactly one tag. Entity tags take precedence over intent tags.
The overall intent should reflect the primary purpose of the sentence within the customer service context.
Be mindful of speaker turns (customer vs. agent) if that context is available, as it can influence intent
